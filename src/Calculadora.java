/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.KeyEvent;

/**
 *
 * @author Christian Ramirez
 */
public class Calculadora extends javax.swing.JFrame {

    // Variables de control para la calculadora
    private String cadenaNumeros = "";
    private String operacion = "nula";
    private double primerNumero, resultado;
    private boolean activado = true;
    private boolean punto = true;

    public Calculadora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        btnClearAll = new javax.swing.JButton();
        btnPercent = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnDivide = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnSubstract = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnMoreMinus = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnPoint = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        txtScreen = new javax.swing.JLabel();
        txtLastOperation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImages(null);
        setResizable(false);

        panel.setLayout(new java.awt.GridLayout(5, 4));

        btnClearAll.setBackground(new java.awt.Color(238, 238, 238));
        btnClearAll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClearAll.setText("C");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });
        panel.add(btnClearAll);

        btnPercent.setBackground(new java.awt.Color(238, 238, 238));
        btnPercent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPercent.setText("%");
        btnPercent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPercentActionPerformed(evt);
            }
        });
        panel.add(btnPercent);

        btnClear.setBackground(new java.awt.Color(238, 238, 238));
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("CE");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        panel.add(btnClear);

        btnDivide.setBackground(new java.awt.Color(231, 231, 231));
        btnDivide.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDivide.setText("/");
        btnDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivideActionPerformed(evt);
            }
        });
        panel.add(btnDivide);

        btn7.setBackground(new java.awt.Color(255, 255, 255));
        btn7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        panel.add(btn7);

        btn8.setBackground(new java.awt.Color(255, 255, 255));
        btn8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        panel.add(btn8);

        btn9.setBackground(new java.awt.Color(255, 255, 255));
        btn9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        panel.add(btn9);

        btnMultiply.setBackground(new java.awt.Color(231, 231, 231));
        btnMultiply.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMultiply.setText("X");
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });
        panel.add(btnMultiply);

        btn4.setBackground(new java.awt.Color(255, 255, 255));
        btn4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        panel.add(btn4);

        btn5.setBackground(new java.awt.Color(255, 255, 255));
        btn5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        panel.add(btn5);

        btn6.setBackground(new java.awt.Color(255, 255, 255));
        btn6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        panel.add(btn6);

        btnSubstract.setBackground(new java.awt.Color(231, 231, 231));
        btnSubstract.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSubstract.setText("-");
        btnSubstract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubstractActionPerformed(evt);
            }
        });
        panel.add(btnSubstract);

        btn1.setBackground(new java.awt.Color(255, 255, 255));
        btn1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        panel.add(btn1);

        btn2.setBackground(new java.awt.Color(255, 255, 255));
        btn2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        panel.add(btn2);

        btn3.setBackground(new java.awt.Color(255, 255, 255));
        btn3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        panel.add(btn3);

        btnAdd.setBackground(new java.awt.Color(231, 231, 231));
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        panel.add(btnAdd);

        btnMoreMinus.setBackground(new java.awt.Color(238, 238, 238));
        btnMoreMinus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMoreMinus.setText("+/-");
        btnMoreMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreMinusActionPerformed(evt);
            }
        });
        panel.add(btnMoreMinus);

        btn0.setBackground(new java.awt.Color(255, 255, 255));
        btn0.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });
        panel.add(btn0);

        btnPoint.setBackground(new java.awt.Color(238, 238, 238));
        btnPoint.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPoint.setText(".");
        btnPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPointActionPerformed(evt);
            }
        });
        panel.add(btnPoint);

        btnEquals.setBackground(new java.awt.Color(255, 204, 153));
        btnEquals.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });
        panel.add(btnEquals);

        txtScreen.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtScreen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtScreen.setText("0");

        txtLastOperation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLastOperation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLastOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLastOperation, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "7";    // El valor actual de la cadena de numeros es 7
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "7";   // Se añade 7 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
        
        System.out.println(evt);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "8";    // El valor actual de la cadena de numeros es 8
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "8";   // Se añade 8 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "9";    // El valor actual de la cadena de numeros es 9
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "9";   // Se añade 9 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "4";    // El valor actual de la cadena de numeros es 4
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "4";   // Se añade 4 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "5";    // El valor actual de la cadena de numeros es 5
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "5";   // Se añade 5 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "6";    // El valor actual de la cadena de numeros es 6
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "6";   // Se añade 6 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "1";    // El valor actual de la cadena de numeros es 1
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "1";   // Se añade 1 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "2";    // El valor actual de la cadena de numeros es 2
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "2";   // Se añade 2 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "3";    // El valor actual de la cadena de numeros es 3
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "3";   // Se añade 3 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        /*
         *  Esta documentacion aplica para los eventos de accion de los botones del 0 al 9
        */

        // Se analiza si el valor actual es 0
        if (txtScreen.getText().equals("0")) 
        {
            cadenaNumeros = "0";    // El valor actual de la cadena de numeros es 0
        } 
        // Sin embargo, por contrario
        else 
        {
            cadenaNumeros += "0";   // Se añade 0 al valor actual de la cadena 
        }
        // Se cambia el valor del espacio de texto con el valor de la cadena de numeros
        txtScreen.setText(cadenaNumeros);
        activado = true;                            // Controlador de que se usa la calculadora
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Se identifica si se encuentra usando la calculadora
        if (activado == true) 
        {
            // Se consigue el valor del primer numero
            primerNumero = Double.parseDouble(cadenaNumeros);
            txtLastOperation.setText(cadenaNumeros + " + ");         // Se asigna un nuevo texto
            cadenaNumeros = "";                                     // Se resetea la cadena de numeros
            operacion = "sumar";                                    // Se establece la operacion de sumar

            activado = false;                                       // Se deja de usar la calculadora
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        // Declaracion de variable donde se almacenara el segundo numero
        double segundoNumero;
        
        // Se analiza si no existe una accion
        if (operacion.equals("nula")) 
        {
            // Se coloca el mismo valor en la cadena de numeros
            txtScreen.setText(cadenaNumeros);
        } 
        // Se analiza si se hizo la accion de sumar
        else if (operacion.equals("sumar")) 
        {
            // Se agarra el valor del segundo valor
            segundoNumero = Double.parseDouble(cadenaNumeros);
            resultado = primerNumero + segundoNumero;                       // Se suman los valores
            txtScreen.setText(String.format("% .2f", resultado));     // Se guarda el resultado en formato
            cadenaNumeros = String.valueOf(resultado);                      // Se muestra el valor en la interfaz
            operacion = "nula";                                             // Se resetea el valor de la operacion
        } 
        // Se analiza si se hizo la accion de restar
        else if (operacion.equals("restar")) 
        {
            // Se agarra el valor del segundo valor
            segundoNumero = Double.parseDouble(cadenaNumeros);              
            resultado = primerNumero - segundoNumero;                       // Se restan los valores
            txtScreen.setText(String.format("% .2f", resultado));     // Se guarda el resultado en formato
            cadenaNumeros = String.valueOf(resultado);                      // Se muestra el valor en la interfaz
            operacion = "nula";                                             // Se resetea el valor de la operacion
        }
        // Se analiza si se hizo la accion de multiplicar
        else if (operacion.equals("multiplicar")) 
        {
            // Se agarra el valor del segundo valor
            segundoNumero = Double.parseDouble(cadenaNumeros);
            resultado = primerNumero * segundoNumero;                       // Se multiplican los valores
            txtScreen.setText(String.format("% .2f", resultado));     // Se guarda el resultado en formato
            cadenaNumeros = String.valueOf(resultado);                      // Se muestra el valor en la interfaz
            operacion = "nula";                                             // Se resetea el valor de la operacion
        } 
        // Se analiza si la accion a realizar es dividir
        else if (operacion.equals("dividir")) 
        {
            // Se agarra el valor del segundo valor
            segundoNumero = Double.parseDouble(cadenaNumeros);
            
            // Se analiza si se divide entre 0
            if (segundoNumero == 0) 
            {
                // Se muestra un mensaje de advertencia
                txtScreen.setText("NoSeDividePor0");
            } 
            else 
            {
                resultado = primerNumero / segundoNumero;                   // Se dividen los valores
            txtScreen.setText(String.format("% .2f", resultado));     // Se guarda el resultado en formato
            cadenaNumeros = String.valueOf(resultado);                      // Se muestra el valor en la interfaz
            operacion = "nula";                                             // Se resetea el valor de la operacion
            }
        }

        // Se resetean los valores y el texto en la calculadora
        txtLastOperation.setText("");
        activado = true;
        punto = false;
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        // Se identifica si se encuentra usando la calculadora
        if (activado == true) 
        {
            // Se consigue el valor del primer numero
            primerNumero = Double.parseDouble(cadenaNumeros);
            txtLastOperation.setText(cadenaNumeros + " x ");         // Se asigna un nuevo texto
            cadenaNumeros = "";                                     // Se resetea la cadena de numeros
            operacion = "multiplicar";                              // Se establece la operacion de multiplicar


            activado = false;                                       // Se deja de usar la calculadora
        }
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnSubstractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubstractActionPerformed
        // Se identifica si se encuentra usando la calculadora
        if (activado == true) 
        {
            // Se consigue el valor del primer numero
            primerNumero = Double.parseDouble(cadenaNumeros);
            txtLastOperation.setText(cadenaNumeros + " - ");         // Se asigna un nuevo texto
            cadenaNumeros = "";                                     // Se resetea la cadena de numeros
            operacion = "restar";                                   // Se establece la operacion de restar

            activado = false;                                       // Se deja de usar la calculadora
        }
    }//GEN-LAST:event_btnSubstractActionPerformed

    private void btnDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivideActionPerformed
        // Se identifica si se encuentra usando la calculadora
        if (activado == true) 
        {
            // Se consigue el valor del primer numero
            primerNumero = Double.parseDouble(cadenaNumeros);
            txtLastOperation.setText(cadenaNumeros + " / ");         // Se asigna un nuevo texto
            cadenaNumeros = "";                                     // Se resetea la cadena de numeros
            operacion = "dividir";                                  // Se establece la operacion de dividir

            activado = false;                                       // Se deja de usar la calculadora
        }
    }//GEN-LAST:event_btnDivideActionPerformed

    private void btnPercentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPercentActionPerformed
        // Se consigue el valor del primer numero
        primerNumero = Double.parseDouble(cadenaNumeros);
        txtLastOperation.setText(cadenaNumeros + "%");               // Se asigna un nuevo texto
        resultado = primerNumero * 0.01;                            // Se multiplica el primer numero por 0.01
        txtScreen.setText(String.format("%.2f", resultado));  // Se guarda el resultado en formato
        cadenaNumeros = String.valueOf(resultado);                  // Se convierte a un string
    }//GEN-LAST:event_btnPercentActionPerformed

    private void btnPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPointActionPerformed
        // Se identifica si se encuentra usando el punto
        if (punto == true) 
        {
            // Se identifica si el campo esta vacio
            if (cadenaNumeros.equals("")) 
            {   
                cadenaNumeros = "0.";                       // Se implementa 0 a la cadena de numeros
            } 
            // Sin embargo
            else 
            {
                cadenaNumeros += ".";                       // Se añade un punto al final de la cadena
            }
            
            txtScreen.setText(cadenaNumeros);         // Se actualiza el texto
            punto = false;                                  // Se desactiva el punto
        }
    }//GEN-LAST:event_btnPointActionPerformed

    private void btnMoreMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreMinusActionPerformed
        // Se identifica si el valor no es negativo
        if (cadenaNumeros.charAt(0) != '-') 
        {
            // Si no lo es, se convierte en negativo
            cadenaNumeros = "-" + cadenaNumeros;
        } 
        // Sin embargo
        else 
        {
            // Si ya lo es, este mismo se convertira a positivo
            cadenaNumeros = cadenaNumeros.substring(1, cadenaNumeros.length());
        }
        
        txtScreen.setText(cadenaNumeros);               // Se actualiza el texto
    }//GEN-LAST:event_btnMoreMinusActionPerformed

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        // Se resetea la pantalla de la calculadora a sus valores iniciales
        txtLastOperation.setText("");
        txtScreen.setText("0");
        operacion = "nula";
        cadenaNumeros = "";
        activado = true;
        punto = true;
    }//GEN-LAST:event_btnClearAllActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // Se determina el tamaño de la cadena de numeros
        int tamaño = cadenaNumeros.length();
        
        // Se analiza si la longitud de numeros es menor a 0
        if (tamaño > 0) 
        {
            // Se analiza si la longitud del tamaño es igual a 1
            if (tamaño == 1) 
            {
                // Si lo es, se asigna el valor de 0
                cadenaNumeros = "0";
            } 
            // Sin embargo
            else 
            {
                // Se resta el ultimo numero a la cadena de numeros
                cadenaNumeros = cadenaNumeros.substring(0, cadenaNumeros.length() - 1);
            }
            // Se actualiza la pantalla de la calculadora con los datos correspondientes
            txtScreen.setText(cadenaNumeros);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnDivide;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnMoreMinus;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnPercent;
    private javax.swing.JButton btnPoint;
    private javax.swing.JButton btnSubstract;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel txtLastOperation;
    private javax.swing.JLabel txtScreen;
    // End of variables declaration//GEN-END:variables
}
